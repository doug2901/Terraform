name: Deployment
on:
  push:
    branches:
      - main

jobs:
  Terraform-Plan:
    runs-on: ubuntu-latest
    environment: pre-prod
    outputs:
      plan_exitcode: ${{ steps.set-exitcode.outputs.plan }}
      version_tag: ${{ steps.bump.outputs.new_tag }}
    env:
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Bump version and push tag
        id: bump
        uses: anothrNick/github-tag-action@1.73.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          WITH_V: true

      - name: Versão criada
        run: | 
          echo "Tag criada: ${{ steps.bump.outputs.new_tag }}"

      - name: ls files
        run: ls -ltr

      - name: Install Terraform CLI
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.12.2"

      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan
        id: plan
        run: terraform plan -detailed-exitcode -out=state_file-${{ steps.bump.outputs.new_tag }} || true #export exitcode=$?
        continue-on-error: true # Allow the step to continue even if -detailed-exitcode returns 2
      - name: Capture Exit Code
        id: set-exitcode
        run: |
          echo "plan=$?" >> $GITHUB_OUTPUT
          echo " Exit Code $plan"

      - name: Check Plan Exit Code
        id: check_plan
        if: steps.plan.outcome == 'success' && steps.plan.outputs.exitcode == '2'
        run: |
          echo "Terraform plan detected changes. Proceeding with apply (or manual approval)."
          # Add logic for manual approval or direct apply here

      - name: No Changes Detected
        if: steps.plan.outcome == 'success' && steps.plan.outputs.exitcode == '0'
        run: |
          echo "No changes detected by Terraform plan. Skipping apply."

      - name: Terraform Plan Failed
        if: steps.plan.outcome == 'failure' || steps.plan.outputs.exitcode == '1'
        run: |
          echo "Terraform plan failed. Review the logs for errors."
          exit 1 # Fail the workflow

      - name: Send plan via email
        if: steps.plan.outcome == 'success' && steps.plan.outputs.exitcode == '2'
        uses: dawidd6/action-send-mail@v6
        with:
          server_address: smtp.gmail.com
          server_port: 587 
          username: ${{ secrets.SMTP_USER }}
          password: ${{ secrets.SMTP_PASS }}
          subject: "O Terraform Inforrrrma - ${{ github.repository }}"
          to: ${{ secrets.SMTP_USER }}
          from: "Terraform <${{ secrets.SMTP_USER }}>"
          body: |
            Foram detectadas alterações a serem feitas em sua infraestrutura.

            Aprove ou rejeite aqui:
            https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}

      - name: ls files
        run: ls -ltr
      - name: Upload artifacts
        if: steps.plan.outcome == 'success' && steps.plan.outputs.exitcode == '2'
        uses: actions/upload-artifact@v4
        with:
          name: state_file-${{ steps.bump.outputs.new_tag }}
          path: state_file-${{ steps.bump.outputs.new_tag }}

  Terraform-Apply:
    runs-on: ubuntu-latest
    needs: Terraform-Plan
    environment: pre-prod-apply
    if: needs.Terraform-Plan.outputs.plan_exitcode == '2'
    env:
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
    steps:
      - name: Get build artifacts
        uses: actions/download-artifact@v4
        with:
          name: state_file-${{ steps.bump.outputs.new_tag }}
          path: ./state_file-${{ steps.bump.outputs.new_tag }}

      - name: Install Terraform CLI
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.12.2"

      - name: Terraform Apply
        id: apply
        run: terraform apply -auto-approve -out=state_file-${{ steps.bump.outputs.new_tag }}