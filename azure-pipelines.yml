trigger:
  branches:
    include:
      - main
  paths:
    include:
    - study_project/*
pool:
  vmImage: ubuntu-latest

steps:

- bash: 
    git clone https://oauth2:$GITHUB_TOKEN@github.com/doug2901/Terraform.git
  env:
    GITHUB_TOKEN: $(GITHUB_TOKEN)
  displayName: 'Cloning repo'

- script: |
    cd Terraform/study_project/
    terraform init
    terraform plan -out=tfPlan
  env:
    ARM_CLIENT_ID: $(ARM_CLIENT_ID)
    ARM_CLIENT_SECRET: $(ARM_CLIENT_SECRET)
    ARM_SUBSCRIPTION_ID: $(ARM_SUBSCRIPTION_ID)
    ARM_TENANT_ID: $(ARM_TENANT_ID)
  displayName: 'Initializing & planning Terraform'
- script: |
      cd Terraform/study_project/
      # Write-Host "LASTEXITCODE : $LASTEXITCODE"
      $plan = $(terraform show -json tfPlan)
      $actions = $plan.resource_changes.change.actions
      Write-Host "Terraform actions : $actions"
      if (($actions -contains 'create') -or ($actions -contains 'delete') -or ($actions -contains 'update'))
      {
        Write-Host "Terraform will perform the following actions : $actions"
        Write-Host "##vso[task.setvariable variable=anyTfChanges;]true"
      }
      else
      {
        Write-Host "There is no change detected in Terraform tfPlan file"
      }
  env:
    ARM_CLIENT_ID: $(ARM_CLIENT_ID)
    ARM_CLIENT_SECRET: $(ARM_CLIENT_SECRET)
    ARM_SUBSCRIPTION_ID: $(ARM_SUBSCRIPTION_ID)
    ARM_TENANT_ID: $(ARM_TENANT_ID)
  displayName: 'check changes'